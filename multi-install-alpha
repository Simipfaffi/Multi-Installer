#!/bin/bash

echo start...
echo
echo

function welcome-text {
echo "WELCOME TO THE MULTI-INSTALLER (Version Alpha 1.0) :-)"
echo
echo
echo "IN this program you can download many well-known programs from the Linux world at once !" 
echo
echo "You can choose from various sources and determine which source you prefer." 
echo "The system package installers (deb, dnf), Snaps and Flatpaks are available."
echo
echo "You can choose programs from a list in different categories."
echo "To select it you have to enter the number of the program." 
echo "These numbers are next to the programs:" 
echo
echo "If you want to know more details, press ( h ) for help!"
echo
echo
echo "Are you ready to start? (y/n)"

}


function welcome-start {
read welcome 
	if [ $welcome = y ]; then
	echo "Energy! :-)"
	sleep 1s
	echo

	elif [ $welcome = Y ]; then
	echo "ENERGY! :-)" 
	sleep 1s
	echo

	elif [ $welcome = n ]; then
	echo exit!
	exit
	
	elif [ $welcome = N ]; then
	echo 
	echo
	echo exit!
	exit
	
	elif [ $welcome = h ]; then
	help-text
	
	elif [ $welcome = H ]; then
	help-text
	
	elif [ $welcome = montanablack ]; then
	echo "Your foud a little easteregg ;-)"
	echo
	echo Monte ist der beste Streamer der auf Twitch
	echo Follow him on https://www.twitch.tv/montanablack88
	echo
	echo Multi-installer ist Wichtig und Richtig!  
	echo M
	echo
	sleep 1s
	echo O
	echo
	sleep 1s
	echo N
	echo 
	sleep 1s
	echo T
	echo
	sleep 1s
	echo E
	echo
	echo erstellt am 25.09.2021
	
	welcome-text
	welcome-start
	
	else 
	echo "please enter a valid number (j/n/h)!"
	echo
	sleep 1s
	welcome-start
fi

}


function help-text {

echo Welcome to the multi-installer!
echo
echo 1:What is multi-installer?
echo
echo "In the multi-installler you can install the most popular Linux applications from various sources (system package installer, Snap, Flatpak) without having to search for them on the Internet or in directories. The echoprograms are also divided into categories."
echo
echo
echo 2. What does it mean when I favorite a source?
echo
echo In a separate step you can favor a source. This means that for programs for which there are several installation sources, a source specified by you is taken first. So you have the opportunity to decide what to e put on your system.
echo
echo
echo 3. How can I favorit a certain source?
echo
echo In a separate step you have the possibility to easily select your favorite source.
echo
echo
echo "What if my favorite source for a program doesn't exist."
echo
echo If your favorite source does not exist for a program, the general order in that program is used. This means:
echo
echo 1. System package installer
echo
echo 2. Flatpak
echo
echo 3 snap
echo
echo This order was chosen so that your programs are as up-to-date as possible. In most cases, the package of the system package installer is more up-to-date than a snap. But this does not always apply:
echo
echo
echo 4. What is the system package installer?
echo
echo The system package installer is always preinstalled and is called apt in Debian and dnf in Fedora. They mostly work in the terminal. They are used to update the system and install system packages.
echo
echo
echo 5. What are Flatpaks?
echo
echo Flatpak is a newer technology that aims to create a uniform and simple installation path for all Linux distributions. It is mainly developed and managed by a large community. Flatpak is now very popular, so that more and more developers are only releasing their software as Flatpak.
echo
echo
echo 6. What are Snaps?
echo
echo "In terms of usability, technology and goals, Snap Flatpak is very similar. But the biggest difference is that Snap doesn't come from a community, but from the Linux software developer Canonical. This company is also behind the popular Linux distribution Ubuntu and provides cloud solutions for companies. One advantage of Snaps is that there is also a lot of commercial software there, as Canonical has contracts with large companies (Google, Microsoft):"
echo
echo
echo 7. What other technologies are used?
echo In addition, this program uses wget to download software packages for the system package installer.
echo
echo
echo 8. Contact.
echo
echo Take a look at my github.
echo For bugs and suggestions:
echo simipfaffi@protonmail.com
echo
echo
echo "Multi-Install (Version Alpha 1.0)"
echo
echo Developed by SimiPfaffi
echo
echo "<3"
echo
echo
echo "If you want to leave the help press (b):"
help-end
}


function help-end {

read help

if [ $help =  b ]; then
welcome-text
welcome-start

elif [ $help = B ]; then
welcome-text
welcome-start

else "please enter a valid number (b):"
sleep 1s
help-end
fi

}


function base {

echo What is your system base?
echo
echo
echo "IMPORTANT ! : If a program does not exist in its desired technology," 
echo "the systempackage installer is used by default."
echo 
echo "If the desired program does not exist in $ deb either, flatpak is used." 
echo "If that doesn't exist either snap. However, when you make your selection,"
echo "you will see which sources are available for a program! :"
echo
echo 
echo "1. Debian (apt)"
echo
echo "2. Fedora (dnf)"
echo
echo
echo Answer with the respective number:
base-read
}

function base-read {
read base

if [ $base = 0 ]; then
echo "please enter a valid number (1, 2) !"
sleep 1s
base-read

fi

}


function technology {
echo
echo
echo	
echo Which source should be preferred? 
echo
echo  
echo "1. flatpak"
echo
echo "2. snap"
echo
echo "3. $deb"
echo 
echo
echo Answer with the respective number:
technology-read
}


function technology-read {
read technology
if [ $technology = 0 ]; then
echo "please enter a valid number (1, 2, 3) !"
sleep 1s
technology-read
fi

}
  



function browser {
echo
echo
echo Category INTERNET :
echo 
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo 
echo Brave Browser\	\	\	\Browser\	\	\ $deb, snap\	\	\1
echo
echo Chromium\	\	\	\Browser\	\	\ $deb, snap, flatpak\	\2
echo
echo Firefox\	\	\	\	\Browser\	\	\ $deb, snap, flatpak\	\3
echo
echo Falkon\	\	\	\	\Browser\	\	\ $deb\	\	\	\4
echo
echo "Gnome Web (Epiphany)"\	\	\Browser\	\	\ $deb, snap, flatpak\	\5
echo
echo Google Chrome\	\	\	\Browser\	\	\ $deb\	\	\	\6
echo 
echo Opera\	\	\	\	\Browser\	\	\ snap\	\	\	\7
echo
echo Tor Browser\	\	\	\Browser\	\	\ flatpak\	\	\8
echo
echo Vivaldi\	\	\	\	\Browser\	\	\ $deb\	\	\	\9
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read browser

echo
echo
}


function office {
echo Category OFFICE :
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo LibreOffice\	\	\	\Office suite\	\ $deb, snap, flatpak\	\1
echo
echo OnlyOffice\	\	\	\Office suite\	\ $deb, snap, flatpak\	\2
echo
echo Softmaker Office\	\	\Office suite\	\ $deb\	\	\	\3
echo
echo WPS Office\	\	\	\Office suite\	\ $deb, snap, flatpak\	\4
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read office

echo
echo
}


function music {
echo Category MUSIC :
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo Audacity\	\	\	\Voice recorder\	\ $deb, snap, flatpak\	\1
echo
echo Clementine Music Player\	\	\Music player\	\ $deb, snap, flatpak\	\2
echo
echo Gnome Music\	\	\	\Music player\	\ $deb, flatpak\	\	\3
echo
echo LMMS Studio\	\	\	\Music studio\	\ $deb, flatpak\	\	\4
echo
echo Lollypop\	\	\	\Music player\	\ $deb, flatpak\	\	\5
echo
echo Melody\	\	\	\	\Music player\	\ snap, flatpak\	\	\6
echo
echo MuseScore\	\	\	\Notes studio\	\ $deb, snap, flatpak\	\7
echo
echo Spotify\	\	\	\	\Music streaming\	\ $deb, snap, flatpak\	\8
echo
echo Rythmbox\	\	\	\Music Player\	\ $deb, snap, flatpak\	\9
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read music		

echo
echo
}


function video {
echo Category VIDEO :
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo Gnome Videos\	\	\	\Video Player\	\ $deb, flatpak\	\	\1
echo
echo Handbrake\	\	\	\Video transcoder\ $deb, snap, flatpak\	\2
echo
echo Kdenlive\	\	\	\Video editor\	\ $deb, snap, flatpak\	\3
echo
echo Kodi\	\	\	\	\Media center\	\ $deb, snap, flatpak\	\4
echo
echo mpv\	\	\	\	\Video Player\	\ $deb, snap, flatpak\	\5
echo
echo OBS Studio\	\	\	\Streaming\	\ $deb, snap, flatpak\	\6
echo
echo Shotcut\	\	\	\	\Video editor\	\ $deb, snap, flatpak\	\7
echo
echo Simple Screen Recorder\	\	\Video Recorder\	\ $deb\	\	\	\8
echo
echo Video Downloader\	\	\Youtube download\ $deb, snap, flatpak\	\9
echo
echo VLC Media Player\	\	\Video player\	\ $deb, snap, flatpak\	\10
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read video

echo
echo
}


function pictures {
echo Category PICTURES / GRAPHIC
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo Blender\	\	\	\	\Grafik Software\	\ $deb, snap, flatpak\	\1
echo
echo Pinta\	\	\	\	\Paint tool\	\ $deb, snap, flatpak\	\2
echo
echo Darktable\	\	\	\Picture editor\	\ $deb, snap, flatpak\	\3
echo
echo Eye of Gnome\	\	\	\Picture viewer\	\ $deb, snap, flatpak\	\4
echo
echo GIMP\	\	\	\	\Picture editor\	\ $deb, snap, flatpak\	\5
echo
echo Inkscape\	\	\	\Paint tool\	\ $deb, snap, flatpak\	\6
echo
echo Krita\	\	\	\	\Paint tool\	\ $deb, snap, flatpak\	\7
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read pictures

echo
echo
}


function communication {
echo Category COMMUNICATION :
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo Element\	\	\	\	\Team software\	\ $deb, flatpak\	\	\1
echo
echo Evolution\	\	\	\E-Mail\	\	\ $deb, snap, flatpak\	\2
echo
echo Discord\	\	\	\	\Communication\	\ $deb, snap, flatpak\	\3
echo
echo Geary\	\	\	\	\E-Mail\	\	\ $deb, flatpak\	\	\4
echo
echo Jitsi Meet\	\	\	\Converence tool\  $deb, flatpak\	\	\5
echo
echo Mailspring\	\	\	\E-Mail\	\	\ $deb, snap\	\	\6
echo
echo Microsoft Teams\	\	\	\Team software\	\ $deb, snap, flatpak\	\7
echo
echo Rambox CE\	\	\	\Messenge manager\ $deb, snap\	\	\8
echo
echo Signal Desktop\	\	\	\Messenger\	\ $deb, snap, flatpak\	\9
echo
echo Skype\	\	\	\	\Face call\	\ $deb, snap, flatpak\	\10
echo
echo Slack\	\	\	\	\Team software\	\ $deb, snap, flatpak\	\11
echo
echo Telegram Desktop\	\	\Messenger\	\ $deb, snap, flatpak\	\12
echo
echo Thunderbird\	\	\	\E-Mail\	\	\ $deb, snap, flatpak\	\13
echo
echo "Whatsapp (unoffical)"\	\	\Messenger\	\ $deb, snap, flatpak\	\14		
echo
echo Zoom\	\	\	\	\Converence tool\  $deb, snap, flatpak\	\15
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read communication

echo
echo
}



function cloud {
echo Category CLOUD / SHARING
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo AnyDesk\	\	\	\	\Remote desktop\	\ $deb, flatpak\	\	\1
echo
echo Dropbox\	\	\	\	\Cloud\	\	\ $deb, flatpak\	\	\2
echo
echo Google Cloud SDK\	\	\Cloud\	\	\ $deb, snap\	\	\3
echo
echo KDE Connect\	\	\	\Cloud\	\	\ $deb\	\	\	\4
echo
echo MEGAsync\	\	\	\Cloud\	\	\ $deb, flatpak\	\	\5
echo
echo Nextcloud\	\	\	\Cloud\	\	\ $deb, snap, flatpak\	\6
echo
echo OnionShare	\	\	\	\Cloud\	\	\ $deb, snap, flatpak\	\7
echo
echo Open Drive\	\	\	\Cloud\	\	\ $deb, flatpak\	\	\8
echo
echo Remmina\	\	\	\	\Remote Desktop\	\ $deb, snap, flatpak\	\9
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read cloud

echo
echo
}


function develop {
echo Category PROGRAM :
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo Android Studio\	\	\	\Developer tool\	\ $deb, snap, flatpak\	\1
echo
echo Arduino IDE\	\	\	\Developer tool\	\ $deb, snap, flatpak\	\2
echo
echo Atom\	\	\	\	\Developer tool\	\ $deb, snap, flatpak\	\3
echo
echo Eclipse IDE Java\	\	\Developer tool\	\ $deb, snap, flatpak\	\4
echo
echo Emacs\	\	\	\	\Text editor\	\ $deb, snap, flatpak\	\5
echo
echo NetBeans\	\	\	\Developer tool\	\ $deb, snap, flatpak\	\6
echo
echo Notepad ++\	\	\	\Text editor\	\ $deb, snap\	\	\7
echo
echo Postman\	\	\	\	\Developer tool\	\ $deb, snap, flatpak\	\8
echo
echo Scratch\	\	\	\	\Game editor\	\ $deb, flatpak\	\	\9
echo
echo Sublime text\	\	\	\Text editor\	\ $deb, snap, flatpak\	\10
echo
echo Unity Hub\	\	\	\Game editor\	\ $deb, flatpak\	\	\11
echo
echo Visual Studio Code\	\	\Developer tool\	\ $deb, snap, flatpak\	\12
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read develop

echo
echo
}


function games {
echo Category GAMES :
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo O A.D.\	\	\	\	\Game\	\	\ $deb, snap, flatpak\	\1
echo
echo DOSBox\	\	\	\	\Game\	\	\ $deb, snap, flatpak\	\2
echo
echo Steam\	\	\	\	\Game launcher\	\ $deb, flatpak\	\	\3
echo
echo SuperTux\	\	\	\Game\	\	\ $deb, snap, flatpak\	\4
echo
echo SuperTux Kart\	\	\	\Game\	\	\ $deb, snap, flatpak\	\5
echo
echo Xonotic\	\	\	\	\Game\	\	\ $deb, snap, flatpak\	\6
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read games

echo
echo
}


function others {
echo Category OTHERS :
echo
echo
echo Name:\	\	\	\	\Typ:\	\	\ Source:\	\	\Number:
echo
echo
echo Bitwarden\	\	\	\Password manager\ $deb, snap, flatpak\	\1
echo
echo Gnome Boxes\	\	\	\Virtualization\	\ $deb, flatpak\	\	\2
echo
echo Gnome Notes\	\	\	\Notes manager\	\ $deb, flatpak\	\	\3
echo
echo Popcicle\	\	\	\USB flasher\	\ flatpak\	\	\4
echo
echo Shortwave\	\	\	\Radio\	\	\ $deb, snap, flatpak\	\5
echo
echo Simplenote\	\	\	\Notes Manager\	\ $deb, snap, flatpak\	\6
echo
echo Tangram\	\	\	\	\Webapps\	\	\ $deb, flatpak\	\	\7
echo
echo
echo "Select the one program you want to install (0 to skip) :"

read others
}

function base-selection {

if [ $base = 1 ]; then 
deb="deb"

elif [ $base = 2 ]; then
deb="dnf"

elif [ $base = 3 ]; then

deb="pacman"
echo Not available :-/ please restart the programm



fi
}

function browser-install {


if [ $browser = 1 ];then
echo Brave Browser
	
	if [ $technology = 2 ]; then
	sudo sudo snap install brave
	
	elif [ $base = 1 ]; then
	sudo apt install apt-transport-https curl
	sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
	echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
	sudo apt update
	sudo apt install brave-browser
	
	else
	sudo dnf install dnf-plugins-core
	sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/
	sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
	sudo dnf install brave-browser
	
	fi

fi

if [ $browser = 2 ];then
echo Chromium Browser

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.chromium.Chromium 

	elif [ $technology = 2 ]; then
	sudo snap install chromium
	
	elif [ $base = 1 ]; then
	sudo apt-get install chromium

	else
	sudo dnf install chromium
	
	fi

fi


if [ $browser = 3 ]; then
echo Firefox Browser
	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.mozilla.firefox

	elif [ $technology = 2 ]; then
	sudo snap install firefox
	
	elif [ $base = 1 ]; then
	sudo apt-get install firefox

	else
	sudo dnf install firefox
	
	fi

fi


if [ $browser = 4 ]; then
echo Falkon Browser
	if [ $technology = 1 ]; then
	sudo dnf install falkon

	elif [ $technology = 2 ]; then
	sudo dnf install falkon
	
	elif [ $base = 1 ]; then
	sudo apt-get install falkon

	else
	sudo dnf install falkon
	
	fi

fi


if [ $browser = 5 ]; then
echo Gnome Web Browser
	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnome.Epiphany

	elif [ $technology = 2 ]; then
	sudo snap install epiphany
	
	elif [ $base = 1 ]; then
	sudo apt-get install epiphany

	else
	sudo dnf install epiphany
	
	fi
fi
	
	
if [ $browser = 6 ];then
echo Google Chrome Browser

	if [ $base = 1 ]; then
	sudo apt-get install wget 
	wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
	sudo dpkg -i google-chrome-stable_current_amd64.deb
	 
	else
	sudo dnf install wget 
	wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
	sudo dnf install google-chrome-stable_current_x86_64.rpm
	
	fi
fi


if [ $browser = 7 ];then
echo Opera Browser
	if [ $technology = 2 ]; then
	sudo snap install opera
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://download.opera.com/download/get/?partner=www&opsys=Linux
	sudo dpkg -i opera-stable_79.0.4143.22_amd64.deb
	
	else
	echo "Unfortunately the Opera Browser is not available for Fedora :-(" 
	
	fi
fi


if [ $browser = 8 ];then
echo Tor Browser

	sudo flatpak install flathub com.github.micahflee.torbrowser-launcher

fi

if [ $browser = 9 ];then
echo Vivaldi Browser

	if [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://downloads.vivaldi.com/stable/vivaldi-stable_4.2.2406.44-1_amd64.deb
	sudo sudo apt-get install vivaldi-stable_4.2.2406.44-1_amd64.deb
	
	else
	sudo dnf install wget
	sudo wget https://downloads.vivaldi.com/stable/vivaldi-stable-4.2.2406.44-1.x86_64.rpm
	sudo dnf install vivaldi-stable-4.2.2406.44-1.x86_64.rpm
	
	fi
fi
	


}				


function office-install {

if [ $office = 1 ];then
echo LibreOffice

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.libreoffice.LibreOffice

	elif [ $technology = 2 ]; then
	sudo snap install libreoffice
	
	elif [ $base = 1 ]; then 
	sudo apt-get install libreoffice
	
	else
	sudo dnf install libreoffice
	
	fi
fi	

if [ $office = 2 ];then
echo OnlyOffice

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.onlyoffice.desktopeditors

	elif [ $technology = 2 ]; then
	sudo snap install onlyoffice-desktopeditors

	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget http://download.onlyoffice.com/repo/onlyoffice.key
	sudo apt-get update
	sudo apt-get install onlyoffice
	
	else
	sudo dnf install wget
	sudo wget http://download.onlyoffice.com/repo/onlyoffice.key
	sudo dnf install onlyoffice
	
	fi
fi

if [ $office = 3 ];then

echo Softmaker Office

	if [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://www.softmaker.net/down/softmaker-office-2021_1034-01_amd64.deb
	sudo dpkg -i softmaker-office-2021_1034-01_amd64.deb
	
	else 
	sudo dnf install wget
	sudo wget https://www.softmaker.net/down/softmaker-office-2021-1034.x86_64.rpm
	sudo dnf install softmaker-office-2021-1034.x86_64.rpm	
	
	fi
fi	

if [ $office = 4 ];then
echo WPS Office 

	if [ $technology = 1 ]; then
	flatpak install flathub com.wps.Office

	elif [ $technology = 2 ]; then
	sudo snap install wps-office-multilang

	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://wdl1.pcfg.cache.wpscdn.com/wpsdl/wpsoffice/download/linux/10702/wps-office_11.1.0.10702.XA_amd64.deb
	sudo dpkg -i wps-office_11.1.0.10702.XA_amd64.deb
	
	else
	sudo dnf install wget
	sudo wget https://wdl1.pcfg.cache.wpscdn.com/wpsdl/wpsoffice/download/linux/10702/wps-office-11.1.0.10702.XA-1.x86_64.rpm
	sudo dnf install wps-office-11.1.0.10702.XA-1.x86_64.rpm
	
	fi
fi		
}


function music-install {

if [ $music = 1 ];then
echo Audacity Sound Recorder

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.audacityteam.Audacity

	elif [ $technology = 2 ]; then
	sudo snap install audacity
	
	elif [ $base = 1 ]; then
	sudo apt-get install audacity
	
	else
	sudo dnf install audacity
	
	fi
fi	

if [ $music = 2 ];then
echo Clementine Music Player

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.clementine_player.Clementine

	elif [ $technology = 2 ]; then
	sudo snap install clementine
	
	elif [ $base = 1 ]; then
	sudo apt-get install clementine
	
	else
	sudo dnf install clementine
	
	fi
fi	

if [ $music = 3 ];then
echo Gnome Music Player

	if [ $technology = 3 ]; then
	sudo flatpak install flathub org.gnome.Music
	
	elif [ $base = 1 ]; then
	sudo apt-get install gnome-music

	else
	sudo dnf install gnome-music
	
	fi
fi

if [ $music = 4 ];then
echo LMMS Music Studio

	if [ $technology = 4 ]; then
	sudo flatpak install flathub io.lmms.LMMS

	elif [ $base = 1 ]; then
	sudo apt-get install lmms

	else
	sudo dnf install lmms
	
	fi
fi

if [ $music = 5 ];then
echo Lollypop Music Player

	if [ $technology = 1 ]; then
	sudo flatpak install flathub io.lmms.LMMS
	
	elif [ $base = 1 ]; then
	sudo apt-get install lollypop

	else
	sudo dnf install lollypop
	
	fi
fi			

if [ $music = 6 ];then
echo Melody Music Player

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.github.artemanufrij.playmymusic

	elif [ $technology = 2 ]; then
	sudo sudo snap install melodie

	else
	sudo flatpak install flathub com.github.artemanufrij.playmymusic
	
	fi
fi

if [ $music = 7 ];then
echo Musescore

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.musescore.MuseScore

	elif [ $technology = 2 ]; then
	sudo dnf install musescore
	
	elif [ $base = 1 ]; then
	sudo apt-get install musescore

	else
	sudo dnf install musescore
	
	fi
fi
}


function video-install {

if [ $video = 1 ];then
echo Gnome Video Player

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnome.Totem
	
	elif [ $base = 1 ]; then
	sudo apt-get install gnome-music
	
	else
	sudo dnf install gnome-music
	
	fi
fi

if [ $video = 2 ];then
echo HandBrake Video Tool

	if [ $technology = 1 ]; then
	sudo flatpak install flathub fr.handbrake.ghb

	elif [ $technology = 2 ]; then
	sudo snap install handbrake-jz
	
	elif [ $base = 1 ]; then
	sudo 
	sudo apt-get install handbrake
	
	else
	sudo flatpak install flathub fr.handbrake.ghb 
	
	fi
fi

if [ $video = 3 ];then
echo Kdenlive Video Editor

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.kde.kdenlive

	elif [ $technology = 2 ]; then
	sudo snap install kdenlive 
	
	elif [ $base = 1 ]; then
	sudo apt-get install kdenlive
	
	else
	sudo flatpak install flathub org.kde.kdenlive
	
	fi
fi	

if [ $video = 4 ];then
echo Kodi Video Library

	if [ $technology = 1 ]; then
	sudo flatpak install flathub tv.kodi.Kodi
	
	elif [ $base = 1 ]; then
	sudo apt-get install kodi
	
	else
	sudo flatpak install flathub tv.kodi.Kodi 
	
	fi
fi

if [ $video = 5 ];then
echo mpv Video player

	if [ $technology = 1 ]; then
	sudo flatpak install flathub io.mpv.Mpv
	
	elif [ $base = 1 ]; then
	sudo apt-get install mpv
	
	else
	sudo flatpak install flathub io.mpv.Mpv 
	
	fi
fi

if [ $video = 6 ];then
echo OBS Studio

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.obsproject.Studio

	elif [ $technology = 2 ]; then
	sudo snap install obs-studio
	
	elif [ $base = 1 ]; then
	sudo add-apt-repository ppa:obsproject/obs-studio
	sudo apt-get update && sudo apt-get install obs-studio
	
	else
	sudo flatpak install flathub com.obsproject.Studio
	
	fi
fi	

if [ $video = 7 ];then
echo Shotcut Video Editor

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.shotcut.Shotcut

	elif [ $technology = 2 ]; then
	sudo snap install shotcut --classic
	
	elif [ $base = 1 ]; then
	sudo apt-get install shotcut
	
	else 
	sudo flatpak install flathub org.shotcut.Shotcut
	
	fi
fi

if [ $video = 8 ];then
echo Simple Screen Recorder

	if [ $base = 1 ]; then
	sudo apt-get install simplescreenrecorder 
	
	else
	sudo rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm
	sudo dnf install simplescreenrecorder
 
	fi
fi	

if [ $video = 9 ];then
echo Video Downloader

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.github.unrud.VideoDownloader

	elif [ $technology = 2 ]; then
	sudo snap install video-downloader 
	
	elif [ $base = 1 ]; then
	sudo flatpak install flathub com.github.unrud.VideoDownloader
	
	else
	sudo dnf install video-downloader
	
	fi
fi

if [ $video = 10 ];then
echo VLC Media Player

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.videolan.VLC

	elif [ $technology = 2 ]; then
	sudo snap install vlc
	
	elif [ $base = 1 ]; then
	sudo apt-get install vlc
	
	else 
	sudo rpm -ivh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm
	sudo yum install vlc
	
	fi
fi							
}


function pictures-install {
if [ $pictures = 1 ];then
echo Blender

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.blender.Blender

	elif [ $technology = 2 ]; then
	sudo snap install blender --classic
	
	elif [ $base = 1 ]; then
	sudo apt-get install blender
	
	else
	sudo sudo dnf install blender
	
	fi
fi

if [ $pictures = 2 ];then
echo Pinta 

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.github.PintaProject.Pinta

	elif [ $technology = 2 ]; then
	sudo snap install pinta
	
	elif [ $base = 1 ]; then
	
	sudo add-apt-repository ppa:pinta-maintainers/pinta-stable
	sudo apt-get update
	sudo apt-get install pinta
	
	else
	sudo flatpak install flathub com.github.PintaProject.Pinta
	
	fi
fi

if [ $pictures = 3 ];then
echo Darktable 

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.darktable.Darktable

	elif [ $technology = 2 ]; then
	sudo snap install darktable
	
	elif [ $base = 1 ]; then
	sudo apt-get install darktable
	
	else
	sudo dnf install darktable
	
	fi
fi

if [ $pictures = 4 ];then
echo Eye of Gnome

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnome.eog

	elif [ $technology = 2 ]; then
	sudo snap install eog
	
	elif [ $base = 1 ]; then
	sudo apt-get install eog
	
	else
	sudo dnf install eog
	
	fi
fi

if [ $pictures = 5 ];then
echo GIMP

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gimp.GIMP 

	elif [ $technology = 2 ]; then
	sudo snap install gimp
	
	elif [ $base = 1 ]; then
	sudo apt-get install gimp
	
	else
	sudo dnf install gimp
	
	fi
fi	

if [ $pictures = 6 ];then
echo Inkscape

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.inkscape.Inkscape

	elif [ $technology = 2 ]; then
	sudo snap install inkscape
	
	elif [ $base = 1 ]; then
	sudo apt-get install inkscape
	
	else
	sudo dnf install inkscape
	
	fi
fi

if [ $pictures = 7 ];then
echo Krita

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.kde.krita

	elif [ $technology = 2 ]; then
	sudo snap install krita
	
	elif [ $base = 1 ]; then
	sudo apt-get install krita
	
	else
	sudo dnf install krita
	
	fi
fi
}	
	

function communication-install {

if [ $communication = 1 ];then
echo Element

	if [ $technology = 1 ]; then
	sudo flatpak install flathub im.riot.Riot

	elif [ $base = 1 ]; then
	sudo apt install -y wget apt-transport-https
	sudo wget -O /usr/share/keyrings/riot-im-archive-keyring.gpg https://packages.riot.im/debian/riot-im-archive-keyring.gpg
	echo "deb [signed-by=/usr/share/keyrings/riot-im-archive-keyring.gpg] https://packages.riot.im/debian/ default main" | sudo tee /etc/apt/sources.list.d/riot-im.list
	sudo apt update
	sudo apt install element-desktop
	
	else
	sudo flatpak install flathub im.riot.Riot
	
	fi
fi

if [ $communication = 2 ];then
echo Evolution E-Mail

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnome.Evolution
	
	elif [ $base = 1 ]; then
	sudo apt-get install evolution
	
	else
	sudo dnf install evolution
	
	fi
fi	

if [ $communication = 3 ];then
echo Discord

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.discordapp.Discord

	elif [ $technology = 2 ]; then
	sudo snap install discord
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://discord.com/api/download?platform=linux&format=deb
	sudo dpkg -i discord-0.0.15.deb
	
	else 
	sudo flatpak install flathub com.discordapp.Discord
	
	fi
fi

if [ $communication = 4 ];then
echo Geary E-Mail

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnome.Geary
	
	elif [ $base = 1 ]; then
	sudo apt-get install geary
	
	else
	sudo dnf install geary
	
	fi
fi

if [ $communication = 5 ];then
echo Jitsi Meet

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.jitsi.jitsi-meet
	
	else
	sudo flatpak install flathub org.jitsi.jitsi-meets
	
	fi
fi

if [ $communication = 6 ];then
echo Mailspring E-mail

	if [ $technology = 2 ]; then
	sudo snap install mailspring
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://updates.getmailspring.com/download?platform=linuxDeb
	sudo dpkg -i mailspring-1.9.2-amd64.deb
	
	else
	sudo dnf install wget
	sudo wget https://updates.getmailspring.com/download?platform=linuxRpm
	sudo dnf install mailspring-1.9.2-0.1.x86_64.rpm 
	
	fi
fi

if [ $communication = 7 ];then
echo Microsoft Teams

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.microsoft.Teams

	elif [ $technology = 2 ]; then
	sudo snap install teams
	
	else
	sudo flatpak install flathub com.microsoft.Teams
	

	fi
fi

if [ $communication = 8 ];then
echo Rambox CE

	if [ $technology = 2 ]; then
	sudo snap install rambox 
	
	else
	sudo snap install rambox
	
	fi
fi

if [ $communication = 9 ];then
echo Signal Desktop

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.signal.Signal

	elif [ $technology = 2 ]; then
	sudo snap install signal-desktop
	
	elif [ $base = 1 ]; then
	sudo wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg
	sudo cat signal-desktop-keyring.gpg | sudo tee -a /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
	echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main' |\
 	sudo tee -a /etc/apt/sources.list.d/signal-xenial.list
 	sudo apt update && sudo apt install signal-desktop

	else
	sudo flatpak install flathub org.signal.Signal
	
	fi
fi

if [ $communication = 10 ];then
echo Skype

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.skype.Client

	elif [ $technology = 2 ]; then
	sudo snap install skype
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://go.skype.com/skypeforlinux-64.deb
	sudo dpkg -i skypeforlinux-64.deb
	
	else
	sudo dnf install wget
	sudo https://go.skype.com/skypeforlinux-64.rpm
	sudo dnf install skypeforlinux-64.rpm
	
	fi
fi

if [ $communication = 11 ];then
echo Slack

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.slack.Slack

	elif [ $technology = 2 ]; then
	sudo snap install slack --classic
	
	else
	sudo flatpak install flathub com.slack.Slack
	
	fi
fi
	
if [ $communication = 12 ];then
echo Telegram Desktop

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.telegram.desktop

	elif [ $technology = 2 ]; then
	sudo snap install telegram-desktop
	
	elif [ $base = 1 ]; then
	sudo apt-get install telegram-desktop
	
	else
	sudo flatpak install flathub org.telegram.desktop
	
	fi
fi			

if [ $communication = 13 ];then
echo Thunderbird

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.mozilla.Thunderbird

	elif [ $technology = 2 ]; then
	sudo snap install thunderbird
	
	elif [ $base = 1 ]; then
	sudo apt-get install thunderbird
	
	else
	sudo dnf install thunderbird
	
	fi
fi

if [ $communication = 14 ];then
echo "Whatsapp Desktop Client (unofficial)"

	if [ $technology = 1 ]; then
	sudo flatpak install flathub io.bit3.WhatsAppQT

	elif [ $technology = 2 ]; then
	sudo snap install whatsdesk 
	
	else
	sudo flatpak install flathub io.bit3.WhatsAppQT
	
	fi
fi

if [ $communication = 15 ];then
echo Zoom Client

	if [ $technology = 1 ]; then
	sudo flatpak install flathub us.zoom.Zoom

	elif [ $technology = 2 ]; then
	sudo snap install zoom-client
	
	else
	sudo flatpak install flathub us.zoom.Zoom 
	
	fi
fi
}


function cloud-install {

if [ $cloud = 1 ];then
echo AnyDesk

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.anydesk.Anydesk
	
	else
	sudo sudo flatpak install flathub com.anydesk.Anydesk
	
	fi
fi

if [ $cloud = 2 ];then
echo Dropbox

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.dropbox.Client
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2020.03.04_amd64.deb
	sudo dpkg -i dropbox_2020.03.04_amd64.deb
	
	else
	sudo dnf install wget
	sudo wget https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-2020.03.04-1.fedora.x86_64.rpm
	sudo dnf install nautilus-dropbox-2020.03.04-1.fedora.x86_64.rpm
	
	fi
fi

if [ $cloud = 3 ];then
echo Google Cloud SDK

	if [ $technology = 2 ]; then
	sudo snap install google-cloud-sdk --classic
	
	else 
	sudo snap install google-cloud-sdk --classic
	
	fi
fi

if [ $cloud = 4 ];then
echo MEGAsync

	if [ $technology = 1 ]; then
	sudo flatpak install flathub nz.mega.MEGAsync
	
	else
	sudo flatpak install flathub nz.mega.MEGAsync
	
	fi
fi

if [ $cloud = 5 ];then
echo KDE Connect
	
	if [ $base = 1 ]; then
	sudo apt-get install kdeconnect
	
	else
	sudo dnf install kde-connect
	
	fi
fi

if [ $cloud = 6 ];then
echo Nextcloud Desktop

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.nextcloud.desktopclient.nextcloud

	elif [ $technology = 2 ]; then
	sudo snap install nextcloud
	
	elif [ $base = 1 ]; then
	sudo apt-get nextcloud-desktop
	
	else
	sudo dnf install nextcloud
	
	fi
fi

if [ $cloud = 7 ];then
echo OnionShare

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.onionshare.OnionShare

	elif [ $technology = 2 ]; then
	sudo snap install onionshare
	
	elif [ $base = 1 ]; then
	sudo apt-get install onionshare
	
	else
	sudo dnf install onionshare
	
	fi
fi

if [ $cloud = 8 ];then
echo Open Drive Client

	if [ $technology = 1 ]; then
	sudo flatpak install flathub io.github.liberodark.OpenDrive
	
	else
	sudo sudo flatpak install flathub io.github.liberodark.OpenDrive
	
	fi
fi

if [ $cloud = 9 ];then
echo Remmina Remote Desktop

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.remmina.Remmina

	elif [ $technology = 2 ]; then
	sudo snap install remmina
	
	elif [ $base = 1 ]; then
	sudo apt-get install remmina
	
	else
	sudo dnf install remmina
	
	fi
fi
}


function develop-install {

if [ $develop = 1 ];then
echo Android Studio 

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.google.AndroidStudio

	elif [ $technology = 2 ]; then
	sudo snap install android-studio --classic
	
	else
	sudo flatpak install flathub com.google.AndroidStudio
	
	fi
fi

if [ $develop = 2 ];then
echo Anduino IDE

	if [ $technology = 1 ]; then
	sudo flatpak install flathub cc.arduino.arduinoide

	elif [ $technology = 2 ]; then
	sudo snap install arduino
	
	elif [ $base = 1 ]; then
	sudo apt-get install arduino
	
	else
	sudo dnf install arduino
	
	fi
fi

if [ $develop = 3 ];then
echo Atom

	if [ $technology = 1 ]; then
	sudo flatpak install flathub io.atom.Atom

	elif [ $technology = 2 ]; then
	sudo snap install atom --classic
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://atom.io/download/deb
	sudo dpkg -i atom-amd64.deb
	
	else
	sudo dnf install wget
	sudo wget https://atom.io/download/rpm
	sudo dnf install atom.x86_64.rpm 
	
	fi
fi

if [ $develop = 4 ];then
echo Eclipse IDE Java

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.eclipse.Java

	elif [ $technology = 2 ]; then
	sudo snap install eclipse --classic
	
	elif [ $base = 1 ]; then
	sudo sudo flatpak install flathub org.eclipse.Java
	
	else
	sudo dnf install eclipse
	
	fi
fi

if [ $develop = 5 ];then
echo Emacs

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnu.emacs

	elif [ $technology = 2 ]; then
	sudo snap install emacs --classic
	
	elif [ $base = 1 ]; then
	sudo apt-get install emacs
	
	else
	sudo dnf install emacs
	
	fi
fi

if [ $develop = 6 ];then
echo NetBeans

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.apache.netbeans

	elif [ $technology = 2 ]; then
	sudo snap install netbeans --classic
	
	else
	sudo 	sudo flatpak install flathub org.apache.netbeans
	
	fi
fi

if [ $develop = 7 ];then
echo Notepad++

	if [ $technology = 2 ]; then
	sudo snap install notepad-plus-plus
	
	else sudo snap install notepad-plus-plus
	sudo 
	
	fi
fi

if [ $develop = 8 ];then
echo Postman

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.getpostman.Postman
	
	elif [ $technology = 2 ]; then
	sudo snap install postman

	else 
	sudo flatpak install flathub com.getpostman.Postman
	
	fi
fi

if [ $develop = 9 ];then
echo Scratch

	if [ $technology = 1 ]; then
	sudo flatpak install flathub edu.mit.Scratch
	
	else
	sudo flatpak install flathub edu.mit.Scratch
	
	fi
fi

if [ $develop = 10 ];then
echo Sublime Text

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.sublimetext.three

	elif [ $technology = 2 ]; then
	sudo snap install sublime-text --classic
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
	sudo apt-get install apt-transport-https
	sudo echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
	sudo apt-get update
	sudo apt-get install sublime-text
	
	else
	sudo dnf install wget
	sudo rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg
	sudo dnf config-manager --add-repo https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo
	sudo dnf install sublime-text

	fi
fi

if [ $develop = 11 ];then
echo Unity Hub

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.unity.UnityHub
	
	else 
	sudo flatpak install flathub com.unity.UnityHub
	
	fi
fi

if [ $develop = 12 ];then
echo Visual Studio Code

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.visualstudio.code

	elif [ $technology = 2 ]; then
	sudo snap install code --classic
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
	sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
	sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
	rm -f packages.microsoft.gpg
	sudo apt install apt-transport-https
	sudo apt update
	sudo apt install code # or code-insiders

	
	else
	sudo dnf install wget
	sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
	sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
	sudo dnf check-update
	sudo dnf install code

	
	fi
fi
}


function games-install {

if [ $games = 1 ];then
echo 0 A.D.

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.play0ad.zeroad

	elif [ $technology = 2 ]; then
	sudo snap install 0ad
	
	elif [ $base = 1 ]; then
	sudo apt-get install 0ad
	
	else
	sudo dnf install 0ad
	
	fi
fi

if [ $games = 2 ];then
echo DOSBox

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.dosbox.DOSBox

	elif [ $technology = 2 ]; then
	sudo snap install dosbox-jz
	
	elif [ $base = 1 ]; then
	sudo apt-get install dosbox
	
	else
	sudo dnf install dosbox
	
	fi
fi

if [ $games = 3 ];then
echo Steam

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.valvesoftware.Steam 
		
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://cdn.akamai.steamstatic.com/client/installer/steam.deb
	sudo dpkg -i steam_latest.deb
	
	else
	sudo flatpak install flathub com.valvesoftware.Steam 
	
	fi
fi

if [ $games = 4 ];then
echo SuperTux

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.supertuxproject.SuperTux

	elif [ $technology = 2 ]; then
	sudo snap install supertux
	
	elif [ $base = 1 ]; then
	sudo apt-get install supertux
	
	else
	sudo dnf install supertux
	
	fi
fi

if [ $games = 5 ];then
echo SuperTux Kart

	if [ $technology = 1 ]; then
	sudo flatpak install flathub net.supertuxkart.SuperTuxKart

	elif [ $technology = 2 ]; then
	sudo snap install supertuxkart
	
	elif [ $base = 1 ]; then
	sudo apt-get install supertuxkart
	
	else
	sudo dnf install supertuxkart
	
	fi
fi

if [ $games = 6 ];then
echo Xonotic

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.xonotic.Xonotic 

	elif [ $technology = 2 ]; then
	sudo snap install xonotic
	
	elif [ $base = 1 ]; then
	sudo flatpak install flathub org.xonotic.Xonotic 
	
	else
	sudo dnf install xonotic
	
	fi
fi
}


function others-install {

if [ $others = 1 ];then
echo Bitwarden

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.bitwarden.desktop

	elif [ $technology = 2 ]; then
	sudo snap install bitwarden
	
	elif [ $base = 1 ]; then
	sudo apt-get install wget
	sudo wget https://vault.bitwarden.com/download/?app=desktop&platform=linux&variant=deb
	sudo dpkg -i Bitwarden-1.28.2-amd64.deb
	
	else
	sudo dnf install wget
	sudo wget https://vault.bitwarden.com/download/?app=desktop&platform=linux&variant=rpm
	sudo dnf install Bitwarden-1.28.2-x86_64.rpm
	
	fi
fi

if [ $others = 2 ];then
echo Gnome Boxes

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnome.Boxes
	
	elif [ $base = 1 ]; then
	sudo apt-get install gnome-boxes
	
	else
	sudo dnf install gnome-boxes
	
	fi
fi

if [ $others = 3 ];then
echo Gnome Notes

	if [ $technology = 1 ]; then
	sudo flatpak install flathub org.gnome.Notes
	
	else
	sudo flatpak install flathub org.gnome.Notes
	
	fi
fi

if [ $others = 4  ];then
echo Popcicle

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.system76.Popsicle
	
	else
	sudo flatpak install flathub com.system76.Popsicle
	
	fi
fi

if [ $others = 5 ];then
echo Shortwave

	if [ $technology = 1 ]; then
	sudo flatpak install flathub de.haeckerfelix.Shortwave

	elif [ $technology = 2 ]; then
	sudo snap install shortwave
	
	else
	sudo sudo flatpak install flathub de.haeckerfelix.Shortwave
	
	fi
fi

if [ $others = 6 ];then
echo Simplenote

	if [ $technology = 1 ]; then
	sudo flatpak install flathub com.simplenote.Simplenote

	elif [ $technology = 2 ]; then
	sudo snap install simplenote
	
	else
	sudo sudo flatpak install flathub com.simplenote.Simplenote
	
	fi
fi

if [ $others = 7 ];then
echo Tangram

	if [ $technology = 1 ]; then
	sudo flatpak install flathub re.sonny.Tangram

	else
	sudo flatpak install flathub re.sonny.Tangram
	
	fi
fi
}


function install-start {
echo You are now done choosing.
echo
echo "Do you want to install the selected programs now? (y/n)"
read install

if [ $install = y ]; then
echo All programs will now be installed:
echo This will take a while and you will have to confirm a few more times that you really want to install a program!
echo
echo
echo "Get a coffee and relax a bit :-)"
sleep 5s
echo installation starts...

elif [ $install = Y ]; then
echo All programs will now be installed:
echo This will take a while and you will have to confirm a few more times that you really want to install a program!
echo
echo
echo "Get a coffee and relax a bit :-)"
sleep 5s
echo installation starts...

elif [ $install = n ]; then
echo exit!
exit

elif [ $install = N ]; then
echo exit!
exit

else 
echo Please choose a valid number!
install-start
fi
}


welcome-text
welcome-start

base
base-selection
while [ $base -gt 3 ]; do
echo please enter a vaild number!
base
base-selection 
done

technology
while [ $technology -gt 3 ]; do
echo please enter a valid number!
technology
done

browser
while [ $browser -gt 9 ]; do
echo please enter a valid number!
read browser

done

office
while [ $office -gt 4 ]; do
echo please enter a valid number!
read office
done

music
while [ $music -gt 9 ]; do
echo please enter a valid number!
read music
done

video
while [ $video -gt 10 ]; do
echo please enter a valid number!
read video
done

pictures
while [ $pictures -gt 7 ]; do
echo please enter a valid number!
read pictures
done

communication
while [ $communication -gt 15 ]; do
echo please enter a valid number!
read communication
done

cloud
while [ $cloud -gt 15 ]; do
echo please enter a valid number!
read cloud
done

develop
while [ $develop -gt 12 ]; do
echo please enter a valid number!
read develop
done

games
while [ $games -gt 6 ]; do
echo please enter a valid number!
read games
done

others
while [ $others -gt 7 ]; do
echo please enter a valid number!
read others
done

install-start

if [ $base = 1 ]; then
sudo apt-get install snapd
sudo apt-get install flathub

else
sudo dnf install snapd
sudo anf install flatpak 
fi

browser-install
office-install
music-install
video-install
pictures-install
communication-install
cloud-install
develop-install
games-install
others-install

echo All programs have been installed!
echo
echo "Have fun with it :-)"
echo
echo finish multi-install













echo done



 

